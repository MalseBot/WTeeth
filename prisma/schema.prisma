datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
 
generator client {
  provider = "prisma-client-js"
}
 
model User {
  id            String          @id @default(cuid())
  email         String          @unique
  name          String
  password      String
  role          Role            
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  sessions      Session[]
}

enum Role {
  Doctor 
  Nurse
}

model Patient {
  id        String   @id @default(cuid())
  name      String
  age       Int
  address   String
  bloodType String
  phone     String
  gender    Gender   @default(Male)
  note      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  appointments Appointment[]
}
enum Gender {
  Male
  Female
}

model Media {
  id            String      @id @default(cuid())
  url           String
  appointment   Appointment @relation(fields: [appointmentId], references: [id], onDelete: Cascade)
  appointmentId String
  createdAt     DateTime    @default(now())
}

model Appointment {
  id            String   @id @default(cuid())
  patientId     String
  date          DateTime
  status        String   @default("Scheduled")
  prescription  String
  medicine      String
  operation     String
  materials     String
  payment       Float
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  patient       Patient  @relation(fields: [patientId], references: [id], onDelete: Cascade)
  media         Media[]  // <-- New relation

  @@index([patientId])
}
 
 enum AppointmentStatus {
  Scheduled
  Completed
  Cancelled
}
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}


